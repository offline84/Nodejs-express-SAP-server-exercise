import { ParameterMap } from '../classes/parameter.map';
import { MimeType } from '../enums/mime.type';
import { FunctionParameter } from '../interfaces/function.parameter';
export declare class MappingOption {
    url: string;
    method: string;
    produces: MimeType;
    consumes: MimeType;
    private controllerName?;
    private controllerMethod?;
    pathVariables?: FunctionParameter[];
    requestParams?: FunctionParameter[];
    requestBodys?: FunctionParameter[];
    internal?: FunctionParameter[];
    rank?: number;
    constructor(mapping?: {
        url: string;
        requestMethod: string;
        produces?: MimeType;
        consumes?: MimeType;
        controllerName?: string;
        controllerMethod?: string;
    });
    static parseParamNames(functionString: string): string[];
    addParameterMap(parameterMap: ParameterMap): void;
    getControllerName(): string;
    setControllerName(controllerName: string): void;
    getControllerMethod(): string;
    setControllerMethod(controllerMethod: string): void;
    toString(): string;
}
