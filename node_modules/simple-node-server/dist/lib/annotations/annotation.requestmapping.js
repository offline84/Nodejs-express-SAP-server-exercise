"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* tslint:disable */
require("reflect-metadata");
const default_router_1 = require("../container/default.router");
const mapping_option_1 = require("../classes/mapping.option");
const default_parameter_injector_1 = require("../container/default.parameter.injector");
const parameter_type_1 = require("../enums/parameter.type");
function RequestMapping(option) {
    return function (target, key) {
        prepareInternalTypeInjection(target, key);
        const mappingOption = new mapping_option_1.MappingOption({ url: option.value, requestMethod: option.method, consumes: option.consumes, produces: option.produces });
        mappingOption.setControllerName(target.constructor.name);
        mappingOption.setControllerMethod(key);
        default_router_1.default.addMapping(mappingOption);
        return target[key];
    };
}
exports.RequestMapping = RequestMapping;
function prepareInternalTypeInjection(target, key) {
    const types = Reflect.getMetadata('design:paramtypes', target, key).map((a) => a.name);
    for (const index in types) {
        if (types[index].includes('NodeletRequest'))
            default_parameter_injector_1.default.setParamsToDestination(target, key, parseInt(index), parameter_type_1.ParameterType.INTERNAL);
        if (types[index].includes('NodeletResponse'))
            default_parameter_injector_1.default.setParamsToDestination(target, key, parseInt(index), parameter_type_1.ParameterType.INTERNAL);
        if (types[index].includes('UserPrincipal'))
            default_parameter_injector_1.default.setParamsToDestination(target, key, parseInt(index), parameter_type_1.ParameterType.INTERNAL);
    }
}
/* tslint:enable */
