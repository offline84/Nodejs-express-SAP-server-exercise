"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
const annotation_requestmapping_1 = require("../annotations/annotation.requestmapping");
const nodelet_response_1 = require("../classes/nodelet.response");
const http_status_1 = require("../enums/http.status");
const mime_type_1 = require("../enums/mime.type");
class ErrorPages {
    badRequest(nodeletResponse) {
        nodeletResponse.body = this.errorHtml(http_status_1.HttpStatus.BAD_REQUEST);
        nodeletResponse.httpStatus = http_status_1.HttpStatus.BAD_REQUEST;
        nodeletResponse.produces = mime_type_1.MimeType.TEXT_HTML;
        return Promise.resolve(nodeletResponse);
    }
    unauthorized(nodeletResponse) {
        nodeletResponse.body = this.errorHtml(http_status_1.HttpStatus.UNAUTHORIZED);
        nodeletResponse.httpStatus = http_status_1.HttpStatus.UNAUTHORIZED;
        nodeletResponse.produces = mime_type_1.MimeType.TEXT_HTML;
        return Promise.resolve(nodeletResponse);
    }
    forbidden(nodeletResponse) {
        nodeletResponse.body = this.errorHtml(http_status_1.HttpStatus.FORBIDDEN);
        nodeletResponse.httpStatus = http_status_1.HttpStatus.FORBIDDEN;
        nodeletResponse.produces = mime_type_1.MimeType.TEXT_HTML;
        return Promise.resolve(nodeletResponse);
    }
    notFound(nodeletResponse) {
        nodeletResponse.body = this.errorHtml(http_status_1.HttpStatus.NOT_FOUND);
        nodeletResponse.httpStatus = http_status_1.HttpStatus.NOT_FOUND;
        nodeletResponse.produces = mime_type_1.MimeType.TEXT_HTML;
        return Promise.resolve(nodeletResponse);
    }
    methodnotallowed(nodeletResponse) {
        nodeletResponse.body = this.errorHtml(http_status_1.HttpStatus.METHOD_NOT_ALLOWED);
        nodeletResponse.httpStatus = http_status_1.HttpStatus.METHOD_NOT_ALLOWED;
        nodeletResponse.produces = mime_type_1.MimeType.TEXT_HTML;
        return Promise.resolve(nodeletResponse);
    }
    errorHtml(httpStatus) {
        return `<!DOCTYPE html>
    <html lang="en" style="font-size: 14px;">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta http-equiv="X-UA-Compatible" content="ie=edge">
      <title>${httpStatus} - ${http_status_1.HttpStatus.getMessage(httpStatus).toUpperCase()}</title>
    </head>
    <body>
      <h1 style="padding: 10px; background: #ccc;">${httpStatus} - ${http_status_1.HttpStatus.getMessage(httpStatus).toUpperCase()}</h1>
    </body>
    </html>`;
    }
}
__decorate([
    annotation_requestmapping_1.RequestMapping({ value: '/error/400' }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [nodelet_response_1.NodeletResponse]),
    __metadata("design:returntype", Promise)
], ErrorPages.prototype, "badRequest", null);
__decorate([
    annotation_requestmapping_1.RequestMapping({ value: '/error/401' }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [nodelet_response_1.NodeletResponse]),
    __metadata("design:returntype", Promise)
], ErrorPages.prototype, "unauthorized", null);
__decorate([
    annotation_requestmapping_1.RequestMapping({ value: '/error/403' }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [nodelet_response_1.NodeletResponse]),
    __metadata("design:returntype", Promise)
], ErrorPages.prototype, "forbidden", null);
__decorate([
    annotation_requestmapping_1.RequestMapping({ value: '/error/404' }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [nodelet_response_1.NodeletResponse]),
    __metadata("design:returntype", Promise)
], ErrorPages.prototype, "notFound", null);
__decorate([
    annotation_requestmapping_1.RequestMapping({ value: '/error/405' }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [nodelet_response_1.NodeletResponse]),
    __metadata("design:returntype", Promise)
], ErrorPages.prototype, "methodnotallowed", null);
exports.ErrorPages = ErrorPages;
